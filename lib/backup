require 'pry'
class Players::Computer < Player
  WIN_COMBINATIONS = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
  ]

  def move(board)
    puts "Where will you place your token?"
    input = ""
    new_combo = []
    rejected = []


    WIN_COMBINATIONS.each do |combo|
      # binding.pry
      a = board.cells[(combo[0])]
      b = board.cells[(combo[1])]
      c = board.cells[(combo[2])]
      positions = [1,2,3,4,5,6,7,8,9]
      scombo = [combo[0], combo[1], combo[2]]
      pt = self.token
      # new_combo = []
      # rejected = []

      if board.turn_count == 0
        input = "5"
      elsif !board.taken?(combo[0]) || !board.taken?(combo[1]) || !board.taken?(combo[2])
        scombo.each do |x|
          if board.taken?(x) && board.cells[x] != pt
            rejected << x
          elsif !board.taken?(x)
            new_combo << x
          # else
          #   positions.each do |x|
          #     if !board.taken?(x)
          #       new_combo << x
          #     end
          #   end
          end
          input = (new_combo.sample.to_i + 1).to_s
        end
      # elsif !board.taken?(a) && !board.taken?(b) && !board.taken?(c)
    # elsif !board.taken?(combo[0]) || !board.taken?(combo[1]) || !board.taken?(combo[2])
    #     scombo.each do |x|
    #       if !board.taken?(x)
    #         new_combo << x
    #       end
    #     end
    #     input = (new_combo.sample.to_i + 1).to_s
      # elsif a.token == self.token || b.token == self.token || c.token == self.token
      #   input = (combo.sample + 1).to_s
    # elsif !board.taken?(combo[0]) || !board.taken?(combo[1]) || !board.taken?(combo[2])
    #     scombo.each_with_index do |x,index|
    #       if x.token != self.token && !board.taken?(x)
    #         new_combo << x
    #       end
    #     end
    #     input = (new_combo.sample.to_i + 1).to_s
      # else
      #   positions.each do |x|
      #     if !board.taken?(x)
      #      new_combo << x
      #    end
      #  end
      #  input = (new_combo.sample.to_i + 1).to_s

      end
    end
    input
  end

end
